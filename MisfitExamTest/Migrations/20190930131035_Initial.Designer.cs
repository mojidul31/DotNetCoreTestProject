// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MisfitExamTest.Repo;

namespace MisfitExamTest.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20190930131035_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("MisfitExamTest.Models.Information", b =>
                {
                    b.Property<int>("InfoId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreateDate");

                    b.Property<long>("FirstNo")
                        .HasColumnType("bigint");

                    b.Property<long>("SecondNo")
                        .HasColumnType("bigint");

                    b.Property<long>("SumOfTwo")
                        .HasColumnType("bigint");

                    b.Property<int>("UserRefId");

                    b.HasKey("InfoId");

                    b.HasIndex("UserRefId");

                    b.ToTable("Informations");
                });

            modelBuilder.Entity("MisfitExamTest.Models.UserInfo", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("UserName");

                    b.HasKey("UserId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("MisfitExamTest.Models.Information", b =>
                {
                    b.HasOne("MisfitExamTest.Models.UserInfo", "UserInfo")
                        .WithMany()
                        .HasForeignKey("UserRefId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
